name: Release RC

# To create a release candidate, update the version in `package.json`
# to include `-rc` (e.g., `5.2.0-rc.1`) and merge it into the main branch.
# The workflow will automatically:

# -   Trigger the build workflow for all platforms
# -   Create a GitHub pre-release
# -   Upload to Artifactory

on:
    push:
        branches:
            - main

jobs:
    check-version:
        name: Check version
        runs-on: ubuntu-latest
        outputs:
            should-run: ${{ steps.check.outputs.should-run }}
            tag: ${{ steps.check.outputs.tag }}
        steps:
            - uses: actions/checkout@v4

            - name: Check version and existence
              id: check
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  TAG="v$VERSION"
                  echo "tag=$TAG" >> $GITHUB_OUTPUT

                  IS_RC_VERSION=true
                  RELEASE_EXISTS=false
                  if [[ "$VERSION" != *-rc* ]]; then
                      echo "# :warning: Not running because $VERSION is not a release candidate" >> $GITHUB_STEP_SUMMARY
                      IS_RC_VERSION=false
                  elif gh release view "$TAG" --repo nordicsemiconductor/pc-nrfconnect-launcher >/dev/null 2>&1; then
                      echo "# :warning: Not running because a release with the tag $TAG already exists" >> $GITHUB_STEP_SUMMARY
                      RELEASE_EXISTS=true
                  fi

                  if $IS_RC_VERSION && ! $RELEASE_EXISTS; then
                      echo "should-run=true" >> $GITHUB_OUTPUT
                  else
                      echo "should-run=false" >> $GITHUB_OUTPUT
                  fi

    release:
        name: Create RC
        needs: check-version
        if: needs.check-version.outputs.should-run == 'true'
        uses: ./.github/workflows/release-common.yml
        with:
            ref: ${{ github.sha }}
            release-type: rc
            tag: ${{ needs.check-version.outputs.tag }}
        secrets: inherit
