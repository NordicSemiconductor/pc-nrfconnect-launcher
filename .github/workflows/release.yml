name: Release production

on:
    workflow_dispatch:
        inputs:
            ref:
                description:
                    Ref (Tag, branch, commit SHA) to release. Default to the
                    main branch.
                type: string

jobs:
    check-version:
        name: Check version and existence
        runs-on: ubuntu-latest
        outputs:
            tag: ${{ steps.check.outputs.tag }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.inputs.ref }}

            - name: Check version and existence
              id: check
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  TAG="v$VERSION"
                  echo "tag=$TAG" >> $GITHUB_OUTPUT

                  # Check if this is a release version (not RC)
                  if [[ "$VERSION" == *-rc* ]]; then
                      echo "::error::Not running because $VERSION is a release candidate version"
                      exit 1
                  fi

                  # Check if GitHub release already exists
                  if gh release view "$TAG" --repo nordicsemiconductor/pc-nrfconnect-launcher >/dev/null 2>&1; then
                      echo "::error::Not running because a GitHub release with the tag $TAG already exists"
                      exit 1
                  fi

                  # Check if Artifactory release already exists
                  ARTIFACTORY_URL="https://files.nordicsemi.com/artifactory/swtools/external/ncd/launcher/$TAG"
                  if curl --head --fail "$ARTIFACTORY_URL" >/dev/null 2>&1; then
                      echo "::error::Not running because an Artifactory release with version $VERSION already exists"
                      exit 1
                  fi

    release:
        name: Create production release
        needs: check-version
        uses: ./.github/workflows/release-common.yml
        with:
            ref: ${{ github.event.inputs.ref }}
            release-type: production
            tag: ${{ needs.check-version.outputs.tag }}
        secrets: inherit

    copy-to-web-assets:
        name: Copy to web-assets to show the release on nordicsemi.com
        needs: [check-version, release]
        runs-on: ubuntu-latest
        env:
            TAG: ${{ needs.check-version.outputs.tag }}
        steps:
            - name: Setup JFrog CLI
              uses: jfrog/setup-jfrog-cli@v4
              env:
                  JF_URL: https://files.nordicsemi.com/
                  JF_ACCESS_TOKEN:
                      ${{ secrets.COM_NORDICSEMI_FILES_PASSWORD_SWTOOLS_FRONTEND
                      }}

            - name: Copy to web-assets
              run: |
                  jf rt copy --flat "swtools/external/ncd/launcher/$TAG/" web-assets-com_nordicsemi/external/swtools/ncd/launcher/$TAG/
                  jf rt copy --flat "swtools/external/ncd/launcher/latest*" web-assets-com_nordicsemi/external/swtools/ncd/launcher/

    publish-docs:
        uses: ./.github/workflows/docs-publish-prod.yml
        needs: release
        secrets: inherit
